name: Deploy AI Project

on:
  push:
    branches:
      - main

jobs:    
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v3
    - name: Run linting rules and tests
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
    - run: npm install -g serverless
    - run: serverless plugin install -n serverless-dotenv-plugin
    - run: serverless plugin install -n serverless-plugin-common-excludes
    - run: serverless plugin install -n serverless-functions-base-path
    - run: serverless plugin install -n serverless-python-requirements
    - run: serverless plugin install -n serverless-lift
    - run: serverless plugin install -n serverless-offline  
    
    - name: Serverless AWS authentication
      run: sls config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS }}
    - name: Create env file
      run: | # cp sample.env.yml env.yml
        cat > .env << EOF
        ${{ secrets.ENV }}
        EOF
    - name: Install NPM dependencies
      run: npm install
    # Optional
    #- name: Build assets
    #  run: npm run assets-dev
    - name: Deploy Lambda functions
      run: sls deploy -s dev

      
    # - uses: actions/checkout@v2
    # - name: Set up Python 3.7
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: 3.7

    # - name: serverless deploy
    #   uses: serverless/github-action@master
    #   with:
    #     args: deploy
    #   env:
    #     # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
    #     # or if using AWS credentials directly
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
